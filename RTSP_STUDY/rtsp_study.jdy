(1条消息)从零开始写一个RTSP服务器（二）RTSP协议的实现_网络_程序员JT的博客-CSDN博客 - https://blog.csdn.net/weixin_42462202/article/details/99068041

.sdp文件格式介绍 - foo__hack - 博客园 - https://www.cnblogs.com/foohack/p/4756460.html
RTSP：应用层协议

(5条消息)sdp文件详细总结_zhangjikuan的专栏-CSDN博客 - 
https://blog.csdn.net/zhangjikuan/article/details/27367437

SDP 协议分析 - 博水 - 博客园 - https://www.cnblogs.com/qingquan/archive/2011/08/02/2125585.html

WebRTC -- SDP格式解析 - 简书 - https://www.jianshu.com/p/94d6defc8e27
SDP(Session Description Protocol)：会话描述协议
SDP协议是基于文本的协议

(5条消息)RTP、RTCP、RTSP协议详解_独行Freedom的博客-CSDN博客 - https://blog.csdn.net/qq_17368865/article/details/80052152
RTP与RTCP协议介绍 - 明明是悟空 - 博客园 - https://www.cnblogs.com/x_wukong/p/4919020.html
(5条消息)RTP协议_qingkongyeyue的博客-CSDN博客 - https://blog.csdn.net/qingkongyeyue/article/details/60590613

RTP: Real-time Transport Protocol,实时传输协议，一般用于多媒体数据的传输。

RTCP: RTP Control Protocol，实时传输控制协议，同RTP一起用于数据传输的监视，控制功能。

RTSP: Real Time Streaming Protocol,实时流协议，用于多媒体数据流的控制，如播放，暂停等。

RTP/RTCP相对于底层传输层，和RTSP，SIP等上层协议一起可以实现视频会议，视频直播等应用。

//----------------------2020-02-21-----------------------------------------------
(1条消息)从零开始写一个RTSP服务器（二）RTSP协议的实现_网络_程序员JT的博客-CSDN博客 - https://blog.csdn.net/weixin_42462202/article/details/99068041

RTSP协议格式与HTTP协议格式类似//请求报文类似，TODO：复习请教http的基础知识，post,get，那些必须要的字段

rtsp的默认端口为554

VCL为客户端，发起请求连接
VCL客户端请求格式：
	格式内容详解：
		5种请求方法
RTSP服务端响应格式：

5种请求方法对应有5种交互过程：
	OPTIONS：获取可用方法
	DESCRIBE:获取（对应会话的媒体）描述信息
	SETUP:发起建立请求（建立连接会话）
	PLAY:发起播放请求
	TEARDOWN:发起关闭（连接会话）请求
sdp格式的学习理解：

//TODU：http和RTSP的文本类型有哪些
Content-type: application/sdp
CSeq:command sequence	指令序列
//做到对RTSP的简单阐述：
	RTSP是一个实时传输流协议，是一个应用层的协议

	通常说的RTSP包括RTSP协议、RTP协议、RTCP协议

	RTSP协议：负责服务器与客户端之间的请求与响应

	RTP协议：负责传输媒体数据

	RTCP协议：在RTP传输过程中提供传输信息

	rtsp承载与rtp和rtcp之上，rtsp并不会发送媒体数据，而是使用rtp协议传输

	rtp并没有规定发送方式，可以选择udp发送或者tcp发送

	ISP(Image Signal Processor),即图像信号处理器,用于处理图像信号传感器输出的图像信号
//---------------------------------2020-02-22-------------------------
//类似RTV电视端，先创建服务器，监听会话连接
1.rtsp的服务器：TCP服务器
	创建套接字
	绑定地址和端口号
	开始监听
2.RTSP服务器传输音视频数据和信息使用的是RTP和RTCP，为RTP和RTCP创建UDP套接字，并绑定号端口
	创建套接字
	绑定端口号
	开始accept等待客户端连接
3.根据协议解析请求
4不同请求对应不同响应
<<<<<<< Updated upstream

=======
>>>>>>> Stashed changes
//-------------------------------------2020-02-29-------------------------------------
特约信源(CSRC)标识符
同步信源(SSRC)标识符

-----------------------------H.264----------------------------------------------------
NVR，全称Network Video Recorder，即网络视频录像机
QoS（Quality of Service，服务质量，RTCP
RTP为Internet上端到端的实时传输提供时间信息和流同步，但并不保证服务质量，服务质量由RTCP来提供。
NALU格式 - 简书 - https://www.jianshu.com/p/1b3f8187b271
H.264由一个一个的NALU组成，每个NALU之间使用00 00 00 01或00 00 01分隔开
NALU：Network Abstract Layer Unit  网络抽象层单元
VCL(视频编码层)和 NAL(网络提取层)；NAL全称Network Abstract Layer, 即网络抽象层
H264简介
H.264从1999年开始，到2003年形成草案，最后在2007年定稿有待核实。在ITU的标准里称为H.264，在MPEG的标准里是MPEG-4的一个组成部分–MPEG-4 Part 10，又叫Advanced Video Codec，因此常常称为MPEG-4 AVC或直接叫AVC。x264主要使用算法为H264编解码算法，下面对H264算法进行解析；

FU Indicator： Fragmentation Units (FUs) Indicator 单帧标志
原始字节序列负荷(RBSP,Raw Byte Sequence Payload) 
FU-A方式分包 - Samaritan - 博客园 - https://www.cnblogs.com/samaritan/p/5063046.html

H264(NAL简介与I帧判断) - JG2014 - 博客园 - https://www.cnblogs.com/yjg2014/p/6144977.html

H264之基础篇 - 季末的天堂 - 博客园 - https://www.cnblogs.com/jimodetiantang/p/9110647.html
NRI（2 bits）：Nal_ref_idc，重要性指示位，

(1条消息)RTP协议分析_Java_蓝精灵的专栏-CSDN博客 - https://blog.csdn.net/u011006622/article/details/80675054
<<<<<<< Updated upstream
RTP报文头中的SSRC和CSRC_网络_不甘平凡的小鸟的专栏-CSDN博客 - https://blog.csdn.net/zhushentian/article/details/79804742
同步信源(SSRC)标识符：占32位，用于标识同步信源。该标识符是随机选择的，参加同一视频会议的两个同步信源不能有相同的SSRC。
特约信源(CSRC)标识符：每个CSRC标识符占32位，可以有0～15个。每个CSRC标识了包含在该RTP报文有效载荷中的所有特约信源。

rtp扩展头的使用_网络_glw的博客-CSDN博客 - https://blog.csdn.net/glw0223/article/details/88357949
RTP有效负载(载荷)类型 (RTP Payload Type)_C#_一个嵌入式小白-CSDN博客 - https://blog.csdn.net/qq_40732350/article/details/88374707
RTP 载荷类型和时间戳详解 - little_star - 博客园 - https://www.cnblogs.com/wyqfighting/archive/2013/03/05/2943992.html

时间戳（timestamp）：32bits。如果是视频，就是视频帧时间戳（单位秒）值乘以90000；如果是音频，就是音频帧时间戳（单位秒）乘以采样率，比如48k、16k。
=======
>>>>>>> Stashed changes

-----------------------------------------------------------------------------------------
1.H264的了解：
是由一个个NALU组成
每个NALU有0x00 0x00 0x00 0x01或0x00 0x00 0x01间隔开来
每个NALU有NALU Header 和 RBSP,即由头部和数据载荷组成
NALU 的头部一个字节 由F,NRI,Type构成
高位到低位
bit7:F ：forbidden_zero_bit. 在 H.264 规范中规定了这一位必须为 0.禁止位，值为1表示语法出错
bit6~5：NRI 重要性指示，越大越重要，可参考可丢弃还是必须处理 NAL  reference indicate
bit4~0:Type

RTP传输H264三种情况：MTU
单个打包传输：最简单，一个RTP包传输一个NALU
聚合打包传输：一个RTP包传输一片NALU
分片打包传输：由于一个NALU太大，超过RTP的MTU,需要切分打包，传到客户端再根据规则重新组装成完整的NALU
	此时RTP的载荷由一个字节的FU Indicator 一个字节FU Header 再加上NALU的数据载荷部分
	FU Indicator和NALU的Header（高位7是F）一样
	记住与区分三个特殊字节的各个位是什么意思，还有作用
	F：
	S:start 开始
	E：end 结束
	R:reserve 保留
	
	//字节的位读取一定是从低位到到位
    FU Indicator的type：数值十进制28 与FU Header的type ：NALU的Type
	Type：28，表示该RTP包一个分片，为什么是28？因为H.264的规范中定义的，


//---------------------------------2020-03-04-------------------------
RTP/AVP stand for RTP A/V Profile.
RTP/AVP & RTP/AVP/TCP - 简书 - https://www.jianshu.com/p/7b9793eb2f4e
(2条消息)RTP/AVP & RTP/AVP/TCP_网络_博客小站-CSDN博客 - https://blog.csdn.net/faihung/article/details/72356132
RTP/AVP/TCP：
既然是在同一个通道传输，怎么区分RTP通道(channel)和RTCP通道呢?
答案是 在RTP层之上增加一层, 叫做:RTSP Interleaved Frame层.

rtsp的交互过程就是客户端请求，服务器响应，C-S架构：
客户端请求，服务器响应

RTSP协议格式与HTTP协议格式类似:
客户端发起请求：
	请求行：请求方法 空格 URL 空格 协议版本 回车换行
	请求头部：头部字段名：值 回车换行
	               。。。
    请求头部：头部字段名：值 回车换行
	回车换行
	请求数据

服务器响应消息：
	响应状态行：版本 空格 状态码 空格 状态描述 回车换行
	消息报头：头部字段名：值 回车换行
	。。。
	消息报头：头部字段名：值 回车换行
	回车换行（空行）
	响应正文
//--------------------------------------------------------------------------------------------
RTSP的概述：
RTSP协议是是一个实时传输流协议，是一个应用层的协议
通常与RTP协议、RTCP协议配合完成多媒体的实时传输。

RTSP协议：负责服务器与客户端之间的请求与响应
RTP协议：负责传输媒体数据
RTCP协议：在RTP传输过程中提供传输信息，保证传输（质量QoS）可靠性
	
RTSP的交互过程：
	rtsp的交互过程就是客户端请求，服务器响应
	RTSP协议请求格式与HTTP协议格式类似,请求行、请求头、请求数据；响应状态行，响应报头，响应正文。
	一个完整流程：必须有如下这5种方法，O,D,S,P,T 。。。大致流程这样的：
	OPTIONS：客户端发送OPTIONS请求,向服务器请求可用方法
			服务端回复客户端，当前可用方法有哪些。。。,如O,D,S,P,T...
			
	DESCRIBE:发送DESCRIBE请求，客户端向服务器请求sdp格式媒体描述文件
			服务器回复了sdp文件，这个文件告诉客户端当前服务器有哪些音视频流，有什么属性
			
	SETUP:客户端发送建立请求，发起建立媒体数据传输连接请求，准备接收音视频数据，告诉服务端多媒体数据传送方式，用UDP还是TCP,客户端的RTP/RTCP使用的端口号等信息
		服务端接收到请求之后，得知客户端要求使用UDP/TCP，多少端口号发送数据，并确认回复
	
	PLAY:客户端请求播放媒体
		 服务器回复之后，会开始使用RTP，并配合RTCP,通过UDP/TCP向客户端发送数据
	TEARDOWN:客户端请求终止会话，
			服务端将停止会话中所有相关流，并释放资源。
	
	媒体描述信息文件sdp
	会话ID
	RTP,RTCP的客户端，服务端的端口号
	
	两个会话：RTSP的会话，在sdp文件中，代表RTSP管理这个交互过程的会话，
			  RTP的会话：代表RTP传输流媒体文件的会话，在SETUP回复中给出
	
Live555源码解析(2) - RTSP协议概述 - 简书 - https://www.jianshu.com/p/cee34e487e2d
	
//-------------------------20200308--------------------------------------------------------------------------
RTP的协议：报头，载体
RTP打包H264
RTP打包AAC
RTP的时间戳增量计算
RTP/AVP/ TCP :
Request For Comments（RFC），是一系列以编号排定的文件。文件收集了有关互联网相关信息，以及UNIX和互联网社区的软件文件。

///------------------------------------------------------------------------------------------------------------
从零开始写一个RTSP服务器（五）RTP传输AAC_网络_程序员JT的博客-CSDN博客 - https://blog.csdn.net/weixin_42462202/article/details/99200935
AAC的ADTS头解析 - 简书 - https://www.jianshu.com/p/b5ca697535bd
AAC音频:AAC（Advanced Audio Coding），中文名：高级音频编码。出现于1997年，基于MPEG-2的音频编码技术。由Fraunhofer IIS、杜比实验室、AT&T、索尼等公司共同开发，目的是取代MP3格式。2000年，MPEG-4标准出现后，
ADTS帧:ADTS(Audio Data Transport Stream)头之于AAC AAC音频文件的每一帧都由一个ADTS头和AAC ES(AAC音频数据)组成。
AAC的RTP打包方式：
AAC的RTP打包方式并没有向H.264那样丰富，我知道的只有一种方式，原因主要是AAC一帧数据大小都是几百个字节，不会向H.264那么少则几个字节，多则几千
AAC的RTP打包方式就是将ADTS帧取出ADTS头部，取出AAC数据，每帧数据封装成一个RTP包。
其中RTP载荷的一个字节为0x00，第二个字节为0x10
第三个字节和第四个字节保存AAC Data的大小，最多只能保存13bit，第三个字节保存数据大小的高八位，第四个字节的高5位保存数据大小的低5位

RTP RTCP在音视频传输与同步方面的使用 - 明明是悟空 - 博客园 - https://www.cnblogs.com/x_wukong/p/5827492.html
rtp传输音视频(纯c代码) - leaffei - 博客园 - https://www.cnblogs.com/leaffei/p/10583045.html

